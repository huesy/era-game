{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "clang build active file",
            "command": "clang",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "make engine",
            "command": "",
            "windows": {
                "command": "if (Get-Command mingw32-make -ErrorAction SilentlyContinue) { mingw32-make CC=clang engine } else { make CC=clang engine }"
            },
            "linux": {
                "command": "make CC=clang engine"
            },
            "osx": {
                "command": "make CC=clang engine"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "make game",
            "command": "",
            "windows": {
                "command": "if (Get-Command mingw32-make -ErrorAction SilentlyContinue) { mingw32-make CC=clang game } else { make CC=clang game }"
            },
            "linux": {
                "command": "make CC=clang game"
            },
            "osx": {
                "command": "make CC=clang game"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "make clean",
            "command": "",
            "windows": {
                "command": "if (Get-Command mingw32-make -ErrorAction SilentlyContinue) { mingw32-make clean } else { make clean }"
            },
            "linux": {
                "command": "make clean"
            },
            "osx": {
                "command": "make clean"
            },
            "problemMatcher": []
        }
    ]
}